<Window x:Class="FFBitrateViewer.MainWindow"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:oxySkia="clr-namespace:OxyPlot.SkiaSharp.Wpf;assembly=OxyPlot.SkiaSharp.Wpf"
    xmlns:local="clr-namespace:FFBitrateViewer"
    xmlns:uc="clr-namespace:FFBitrateViewer.UserControls"
    xmlns:utils="clr-namespace:Utilities"
    mc:Ignorable="d"
    Height="620" MinHeight="540"
    Width="960" MinWidth="700"
    Loaded="Window_Loaded" ResizeMode="CanResizeWithGrip"
    Title="{Binding Path=WindowTitle}"
>
    <Window.InputBindings>
        <KeyBinding Command="{Binding Path=ExecStartCmd}"             Key="F9"/>
        <KeyBinding Command="{Binding Path=ExecStopCmd}"              Key="Esc"/>
        <KeyBinding Command="{Binding Path=PlotExportToClipboardCmd}" Key="C" Modifiers="Ctrl"/>
        <KeyBinding Command="{Binding Path=PlotExportToFileCmd}"      Key="S" Modifiers="Ctrl"/>
        <KeyBinding Command="{Binding Path=FilesAddCmd}"              Key="O" Modifiers="Ctrl"/>
        <KeyBinding Command="{Binding Path=FilesRemoveCmd}"           Key="DEL"/>
        <KeyBinding Command="{Binding Path=MediaInfoReloadCmd}"       Key="F5"/>
    </Window.InputBindings>

    <Window.Resources>
        <local:BindingProxy                      x:Key="proxy" Data="{Binding}" />

        <BooleanToVisibilityConverter            x:Key="BoolToVisibility" />
        <local:FileDropTargetBackgroundConverter x:Key="FileDropTargetBackground" />
        <local:MediaInfoCompactConverter         x:Key="MediaInfoFrameInfoCompact" />
        <local:BitRateConverter                  x:Key="BitRate" />
        <local:FSConverter                       x:Key="FS" />
        <local:NotNullToVisibileConverter        x:Key="NotNullVisible" />
        <local:StringToBooleanConverter          x:Key="StringToBoolean" />

        <Style x:Key="FFProbeValidity" TargetType="{x:Type StatusBarItem}">
            <Style.Triggers>
                <DataTrigger Binding="{Binding VersionInfo.IsOK}" Value="False">
                    <Setter Property="Control.Foreground" Value="Red" />
                    <Setter Property="Control.FontWeight" Value="Bold" />
                </DataTrigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="FileProgressBar" TargetType="{x:Type ProgressBar}">
            <Setter Property="Foreground" Value="#FF08DE2F" />
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="BorderThickness" Value="0,0,0,0" />
        </Style>

        <!-- ListViewItem ControlTemplate -->
        <!--
            Re-defining ListViewItem ControlTemplate as we need "drop to" indicator between items
            Styling it similar to default implementation: https://github.com/dotnet/wpf/blob/main/src/Microsoft.DotNet.Wpf/src/Themes/XAML/ListViewItem.xaml
        -->
        <Style x:Key="ListViewItemFocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle StrokeThickness="1" RadiusX="2" RadiusY="2" Stroke="#8E6EA6F5"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <LinearGradientBrush x:Key="ListItemHoverFill" StartPoint="0,0" EndPoint="0,1">
            <LinearGradientBrush.GradientStops>
                <GradientStop Color="#FFF1FBFF" Offset="0"/>
                <GradientStop Color="#FFD5F1FE" Offset="1"/>
            </LinearGradientBrush.GradientStops>
        </LinearGradientBrush>
        <LinearGradientBrush x:Key="ListItemSelectedFill" StartPoint="0,0" EndPoint="0,1">
            <LinearGradientBrush.GradientStops>
                <GradientStop Color="#FFD9F4FF" Offset="0"/>
                <GradientStop Color="#FF9BDDFB" Offset="1"/>
            </LinearGradientBrush.GradientStops>
        </LinearGradientBrush>
        <LinearGradientBrush x:Key="ListItemSelectedHoverFill" StartPoint="0,0" EndPoint="0,1">
            <LinearGradientBrush.GradientStops>
                <GradientStop Color="#FFEAF9FF" Offset="0"/>
                <GradientStop Color="#FFC9EDFD" Offset="1"/>
            </LinearGradientBrush.GradientStops>
        </LinearGradientBrush>
        <LinearGradientBrush x:Key="ListItemSelectedInactiveFill" StartPoint="0,0" EndPoint="0,1">
            <LinearGradientBrush.GradientStops>
                <GradientStop Color="#FFEEEDED" Offset="0"/>
                <GradientStop Color="#FFDDDDDD" Offset="1"/>
            </LinearGradientBrush.GradientStops>
        </LinearGradientBrush>

        <Style x:Key="GridViewItemContainerStyleKey" TargetType="{x:Type ListViewItem}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource ListViewItemFocusVisual}"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderBrush" Value="Transparent"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Margin" Value="0,0,0,1"/>
            <Setter Property="Padding" Value="5,2,5,2"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Margin" Value="0" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ListViewItem}">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition></RowDefinition>
                                <RowDefinition></RowDefinition>
                            </Grid.RowDefinitions>
                            <Border Name="OuterBorder" Grid.Row="0" Grid.RowSpan="2" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}" Background="{TemplateBinding Background}" CornerRadius="2" SnapsToDevicePixels="true">
                                <Border Name="InnerBorder" CornerRadius="1" BorderThickness="1">
                                    <Grid>
                                        <Grid.RowDefinitions>
                                            <RowDefinition MaxHeight="11"/>
                                            <RowDefinition/>
                                        </Grid.RowDefinitions>
                                        <Rectangle Name="UpperHighlight" Visibility="Collapsed" Fill="#75FFFFFF"/>
                                        <GridViewRowPresenter Grid.RowSpan="2" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                    </Grid>
                                </Border>
                            </Border>
                            <Border Grid.Row="0" Visibility="Hidden" BorderBrush="Transparent" Margin="0,-1,0,0" BorderThickness="0,2,0,0" Name="DropAbove"/>
                            <Border Grid.Row="1" Visibility="Hidden" BorderBrush="Transparent" Margin="0,0,0,-1" BorderThickness="0,0,0,2" Name="DropBelow"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="{StaticResource ListItemHoverFill}"/>
                                <Setter Property="BorderBrush" Value="#FFCCF0FF"/>
                                <Setter TargetName="UpperHighlight" Property="Visibility" Value="Visible"/>
                            </Trigger>
                            <Trigger Property="IsSelected" Value="True">
                                <Setter Property="Background" Value="{StaticResource ListItemSelectedFill}"/>
                                <Setter Property="BorderBrush" Value="#FF98DDFB"/>
                                <Setter TargetName="InnerBorder" Property="BorderBrush" Value="#80FFFFFF"/>
                                <Setter TargetName="UpperHighlight" Property="Visibility" Value="Visible"/>
                                <Setter TargetName="UpperHighlight" Property="Fill" Value="#40FFFFFF"/>
                            </Trigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsSelected" Value="True"/>
                                    <Condition Property="Selector.IsSelectionActive" Value="False"/>
                                </MultiTrigger.Conditions>
                                <Setter Property="Background" Value="{StaticResource ListItemSelectedInactiveFill}"/>
                                <Setter Property="BorderBrush" Value="#FFCFCFCF"/>
                            </MultiTrigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsSelected" Value="True"/>
                                    <Condition Property="IsMouseOver" Value="True"/>
                                </MultiTrigger.Conditions>
                                <Setter Property="Background" Value="{StaticResource ListItemSelectedHoverFill}"/>
                                <Setter Property="BorderBrush" Value="#FF98DDFB"/>
                            </MultiTrigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="utils:DragDropHighlighter.IsDroppingAbove" Value="True">
                                <Setter TargetName="DropAbove" Property="Visibility"  Value="Visible"/>
                                <Setter TargetName="DropAbove" Property="BorderBrush" Value="Black"/>
                            </Trigger>
                            <Trigger Property="utils:DragDropHighlighter.IsDroppingBelow" Value="True">
                                <Setter TargetName="DropBelow" Property="Visibility"  Value="Visible"/>
                                <Setter TargetName="DropBelow" Property="BorderBrush" Value="Black"/>
                            </Trigger>
                            <DataTrigger Binding="{Binding Path=IsEnabled}" Value="False">
                                <Setter Property="Opacity" Value="0.5" TargetName="OuterBorder"/>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding Path=IsExists}" Value="False">
                                <Setter Property="Foreground" Value="Red" />
                            </DataTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
            </Style.Triggers>
        </Style>
        <!-- /ListViewItem ControlTemplate -->
    </Window.Resources>

    <Window.TaskbarItemInfo>
        <TaskbarItemInfo ProgressState="Normal" ProgressValue="{Binding Path=OverallProgress.CurrentPercent, Mode=OneWay}" />
    </Window.TaskbarItemInfo>

    <Grid x:Name="GridTop">
        <Grid.RowDefinitions>
            <RowDefinition Height="22"></RowDefinition>
            <RowDefinition Height="*"></RowDefinition>
            <RowDefinition Height="25"></RowDefinition>
        </Grid.RowDefinitions>

        <Menu Grid.Row="0" FontSize="14" Padding="5,0,0,0">
            <MenuItem Header="_File">
                <MenuItem Header="E_xit" Command="{Binding ExitCmd}" InputGestureText="Alt+F4">
                    <MenuItem.Icon>
                        <ContentControl Template="{StaticResource ExitIcon}" />
                    </MenuItem.Icon>
                </MenuItem>
            </MenuItem>
            <MenuItem Header="A_ctions">
                <MenuItem Header="_Add files…" Command="{Binding Path=FilesAddCmd}" InputGestureText="Ctrl+O">
                    <MenuItem.Icon>
                        <ContentControl Template="{StaticResource OpenFileIcon}" />
                    </MenuItem.Icon>
                </MenuItem>
                <MenuItem Header="_Remove selected files" Command="{Binding Path=FilesRemoveCmd}" InputGestureText="DEL">
                    <MenuItem.Icon>
                        <ContentControl Template="{StaticResource DeleteTableRowIcon}" />
                    </MenuItem.Icon>
                </MenuItem>
                <MenuItem Header="Remove ALL files" Command="{Binding Path=FilesClearCmd}">
                    <MenuItem.Icon>
                        <ContentControl Template="{StaticResource DeleteAllRowsIcon}" />
                    </MenuItem.Icon>
                </MenuItem>
                <Separator />
                <MenuItem Header="Refresh _media info" Command="{Binding Path=MediaInfoReloadCmd}" InputGestureText="F5">
                    <MenuItem.Icon>
                        <ContentControl Template="{StaticResource RefreshIcon}" />
                    </MenuItem.Icon>
                </MenuItem>
                <Separator />
                <MenuItem Header="_Start" Command="{Binding ExecStartCmd}" InputGestureText="F9">
                    <MenuItem.Icon>
                        <ContentControl Template="{StaticResource StartIcon}" />
                    </MenuItem.Icon>
                </MenuItem>
                <MenuItem Header="St_op" Command="{Binding ExecStopCmd}" InputGestureText="Esc">
                    <MenuItem.Icon>
                        <ContentControl Template="{StaticResource StopIcon}" />
                    </MenuItem.Icon>
                </MenuItem>
                <Separator />
                <MenuItem Header="Copy plot to _clipboard" Command="{Binding PlotExportToClipboardCmd}" InputGestureText="Ctrl+C">
                    <MenuItem.Icon>
                        <ContentControl Template="{StaticResource CopyThemeIcon}" />
                    </MenuItem.Icon>
                </MenuItem>
                <MenuItem Header="Save plot to _file…" Command="{Binding PlotExportToFileCmd}" InputGestureText="Ctrl+S">
                    <MenuItem.Icon>
                        <ContentControl Template="{StaticResource ImportThemeIcon}" />
                    </MenuItem.Icon>
                </MenuItem>
            </MenuItem>
            <MenuItem Header="_Options">
                <MenuItem Header="Write _FFProbe commands to log" IsCheckable="True" IsChecked="{Binding Path=IsLoggingFFCommands}" IsEnabled="{Binding Path=IsLogCommandsEnabled}"></MenuItem>
            </MenuItem>
            <MenuItem Header="_Help">
                <MenuItem Header="_About" Command="{Binding AboutShowCmd}"></MenuItem>
            </MenuItem>
        </Menu>

        <Grid Grid.Row="1" x:Name="GridContent" IsEnabled="{Binding Path=VersionInfo.IsOK}">
            <Grid.RowDefinitions>
                <RowDefinition Height="50"></RowDefinition>
                <RowDefinition Height="160"></RowDefinition>
                <RowDefinition Height="50"></RowDefinition>
                <RowDefinition Height="*"></RowDefinition>
            </Grid.RowDefinitions>

            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"></ColumnDefinition>
                <ColumnDefinition Width="90"></ColumnDefinition>
                <ColumnDefinition Width="80"></ColumnDefinition>
            </Grid.ColumnDefinitions>

            <StackPanel Grid.Row="0" Grid.ColumnSpan="3" Orientation="Horizontal" Height="25" VerticalAlignment="Top" Margin="15,15,15,0">
                <Button Command="{Binding FilesAddCmd}" Margin="0" Height="25" FontSize="14" ToolTip="Add distorted files to the list" HorizontalContentAlignment="Left" AllowDrop="False">
                    <StackPanel Orientation="Horizontal">
                        <ContentControl Template="{StaticResource OpenFileIcon}" Margin="5,0,5,0" />
                        <TextBlock Margin="0,0,5,0">Add files…</TextBlock>
                    </StackPanel>
                </Button>
                <Button Command="{Binding FilesRemoveCmd}" Margin="10,0,0,0" Height="25" FontSize="14" ToolTip="Remove selected files from the list" HorizontalContentAlignment="Left" AllowDrop="False">
                    <StackPanel Orientation="Horizontal">
                        <ContentControl Template="{StaticResource DeleteTableRowIcon}" Margin="5,0,5,0" />
                        <TextBlock Margin="0,0,10,0">Remove selected</TextBlock>
                    </StackPanel>
                </Button>
            </StackPanel>

            <Grid Grid.Row="1" Grid.ColumnSpan="3" x:Name="FilesList"  Margin="15,5,15,0">
                <ListView x:Name="listviewFiles" FontSize="14"
                    ScrollViewer.HorizontalScrollBarVisibility="Hidden"
                    AllowDrop="True"
                    PreviewDragEnter="Control_PreviewDragEnter"
                    PreviewDragLeave="Control_PreviewDragLeave"
                    PreviewDragOver="Control_PreviewDragOver"
                    PreviewDrop="Control_PreviewDrop"
                    PreviewMouseLeftButtonDown="Control_PreviewMouseLeftButtonDown"
                    MouseMove="Control_MouseMove"
                    ItemsSource="{Binding Path=Files}" Margin="0,0,0,0"
                    ItemContainerStyle="{StaticResource GridViewItemContainerStyleKey}"
                >
                    <ListView.Resources>
                        <Style TargetType="{x:Type GridViewColumnHeader}">
                            <Setter Property="HorizontalContentAlignment" Value="Left" />
                        </Style>
                    </ListView.Resources>

                    <ListView.View>
                        <GridView AllowsColumnReorder="False">
                            <GridViewColumn Header="" Width="20" x:Name="GridViewColCheckbox">
                                <GridViewColumn.CellTemplate>
                                    <DataTemplate>
                                        <CheckBox IsChecked="{Binding Path=IsEnabled}" Padding="0" Margin="-5,0" VerticalContentAlignment="Center" ToolTip="Only ticked files processed and shown on plot" VerticalAlignment="Center" />
                                    </DataTemplate>
                                </GridViewColumn.CellTemplate>
                            </GridViewColumn>

                            <GridViewColumn Header=" Path to file"
                                Width="{Binding ElementName=helperField, Path=ActualWidth}"
                                x:Name="GridViewColPath"
                            >
                                <GridViewColumn.CellTemplate>
                                    <DataTemplate>
                                        <TextBlock Text="{Binding Path=FS, Mode=OneWay, Converter={StaticResource FS}}" ToolTip="{Binding Path=FS}" FontSize="13" Padding="0" Margin="-5,0" VerticalAlignment="Center" TextTrimming="CharacterEllipsis" />
                                    </DataTemplate>
                                </GridViewColumn.CellTemplate>
                            </GridViewColumn>

                            <GridViewColumn Header=" Media info" Width="140"
                                x:Name="GridViewColMediaInfo"
                            >
                                <GridViewColumn.CellTemplate>
                                    <DataTemplate>
                                        <Grid Margin="-5,0" Width="{Binding ElementName=GridViewColMediaInfo, Path=ActualWidth}">
                                            <!-- ProgressBar with IsIndeterminate="True" causing high CPU/GPU utilisation even when hidden! -->
                                            <ProgressBar Style="{StaticResource FileProgressBar}" IsIndeterminate="{Binding Path=IsMediaInfoLoading, Mode=OneWay}" Visibility="{Binding Path=IsMediaInfoLoading, Mode=OneWay, Converter={StaticResource BoolToVisibility}}"/>
                                            <Label VerticalContentAlignment="Center" Padding="0" FontSize="13"
                                                Content="{Binding Path=MediaInfo, Mode=OneWay, Converter={StaticResource MediaInfoFrameInfoCompact}}"
                                                ToolTipService.ShowDuration="20000"
                                            >
                                                <Label.ToolTip>
                                                    <ToolTip Visibility="{Binding Path=MediaInfo, Mode=OneWay, Converter={StaticResource NotNullVisible}}">
                                                        <uc:MediaInfoBox MediaInfo="{Binding Path=MediaInfo, Mode=OneWay}" FramesCount="{Binding Path=FramesCount, Mode=OneWay}" />
                                                    </ToolTip>
                                                </Label.ToolTip>
                                            </Label>
                                        </Grid>
                                    </DataTemplate>
                                </GridViewColumn.CellTemplate>
                            </GridViewColumn>

                            <GridViewColumn Header=" Bit rate (avg)" Width="90" x:Name="GridViewColBitRateAvg">
                                <GridViewColumn.CellTemplate>
                                    <DataTemplate>
                                        <Grid Margin="-5,0" Width="{Binding ElementName=GridViewColBitRateAvg, Path=ActualWidth}">
                                            <!-- ProgressBar with IsIndeterminate="True" causing high CPU/GPU utilisation even when hidden! -->
                                            <ProgressBar Style="{StaticResource FileProgressBar}" IsIndeterminate="{Binding Path=IsDataLoading, Mode=OneWay}" Visibility="{Binding Path=IsDataLoading, Mode=OneWay, Converter={StaticResource BoolToVisibility}}"/>
                                            <TextBlock Text="{Binding Path=BitRateAvg, Mode=OneWay, Converter={StaticResource BitRate}}" FontSize="13" VerticalAlignment="Center" HorizontalAlignment="Left" />
                                        </Grid>
                                    </DataTemplate>
                                </GridViewColumn.CellTemplate>
                            </GridViewColumn>

                            <GridViewColumn Header=" Bit rate (max)" Width="90" x:Name="GridViewColBitRateMax">
                                <GridViewColumn.CellTemplate>
                                    <DataTemplate>
                                        <Grid Margin="-5,0" Width="{Binding ElementName=GridViewColBitRateMax, Path=ActualWidth}">
                                            <!-- ProgressBar with IsIndeterminate="True" causing high CPU/GPU utilisation even when hidden! -->
                                            <ProgressBar Style="{StaticResource FileProgressBar}" IsIndeterminate="{Binding Path=IsDataLoading, Mode=OneWay}" Visibility="{Binding Path=IsDataLoading, Mode=OneWay, Converter={StaticResource BoolToVisibility}}"/>
                                            <TextBlock Text="{Binding Path=BitRateMax, Mode=OneWay, Converter={StaticResource BitRate}}" FontSize="13" VerticalAlignment="Center" HorizontalAlignment="Left" />
                                        </Grid>
                                    </DataTemplate>
                                </GridViewColumn.CellTemplate>
                            </GridViewColumn>
                        </GridView>
                    </ListView.View>
                </ListView>

                <!-- This is the hidden helper Grid which does the resizing -->
                <!-- https://stackoverflow.com/questions/10309249/listview-gridviewcolumn-width -->
                <Grid Visibility="Hidden">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="{Binding ElementName=GridViewColCheckbox,  Path=ActualWidth}"/>
                        <!-- Width is set to "Fill" -->
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="{Binding ElementName=GridViewColMediaInfo, Path=ActualWidth}"/>
                        <ColumnDefinition Width="{Binding ElementName=GridViewColBitRateAvg, Path=ActualWidth}"/>
                        <ColumnDefinition Width="{Binding ElementName=GridViewColBitRateMax, Path=ActualWidth}"/>
                        <!--Correction Width-->
                        <ColumnDefinition Width="20"/>
                    </Grid.ColumnDefinitions>
                    <Grid Grid.Column="1" x:Name="helperField"/>
                </Grid>
            </Grid>

            <StackPanel Grid.Row="2" Grid.ColumnSpan="3" Orientation="Horizontal" Height="35" VerticalAlignment="Top" Margin="15,15,15,0" IsEnabled="{Binding Path=VersionInfo.IsOK}">
                <Button Width="90" FontSize="18" FontWeight="Bold" Command="{Binding Path=ExecToggleCmd}" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" Padding="1,1,1,2" HorizontalAlignment="Left" Background="#FFDDDDDD">
                    <Button.Resources>
                        <Style TargetType="{x:Type Button}">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding Path=IsRunning}" Value="True">
                                    <Setter Property="ToolTip" Value="Stop"/>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding Path=IsRunning}" Value="False">
                                    <Setter Property="ToolTip" Value="Start"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Button.Resources>
                    <StackPanel Orientation="Horizontal" Margin="-5,0,0,0">
                        <Viewbox Width="24" Height="24">
                            <ContentControl>
                                <ContentControl.Resources>
                                    <Style TargetType="{x:Type ContentControl}">
                                        <Setter Property="Template" Value="{StaticResource StartIcon}" />
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding Path=IsRunning}" Value="True">
                                                <Setter Property="Template" Value="{StaticResource StopIcon}" />
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </ContentControl.Resources>
                            </ContentControl>
                        </Viewbox>

                        <TextBlock HorizontalAlignment="Center" VerticalAlignment="Center" Padding="0,0,0,1">
                            <TextBlock.Resources>
                                <Style TargetType="{x:Type TextBlock}">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding Path=IsRunning}" Value="True">
                                            <Setter Property="Text" Value="Stop" />
                                            <Setter Property="ToolTip" Value="Stop (Esc)" />
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding Path=IsRunning}" Value="False">
                                            <Setter Property="Text" Value="Start" />
                                            <Setter Property="ToolTip" Value="Start (F9)" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </TextBlock.Resources>
                        </TextBlock>
                    </StackPanel>
                </Button>

                <Label VerticalContentAlignment="Center" FontSize="14" Margin="50,0,0,2">Plot view:</Label>
                <RadioButton GroupName="PlotViewType" Margin="5,0,0,0" IsChecked="{Binding Path=PlotViewType, ConverterParameter='frame',  Converter={StaticResource StringToBoolean}, Mode=TwoWay}" VerticalContentAlignment="Center">
                    <TextBlock Margin="-2,0,0,0" FontSize="14">Frame based</TextBlock>
                </RadioButton>
                <RadioButton GroupName="PlotViewType" Margin="10,0,0,0" IsChecked="{Binding Path=PlotViewType, ConverterParameter='second', Converter={StaticResource StringToBoolean}, Mode=TwoWay}" VerticalContentAlignment="Center">
                    <TextBlock Margin="-2,0,0,0" FontSize="14">Second based</TextBlock>
                </RadioButton>

                <!-- RadioButton GroupName="PlotViewType" Margin="10,0,0,0" IsChecked="{Binding Path=PlotViewType, ConverterParameter='GOP',    Converter={StaticResource StringToBoolean}, Mode=TwoWay}" VerticalContentAlignment="Center">
                    <TextBlock Margin="-2,0,0,0" FontSize="14">GOP based</TextBlock>
                </RadioButton -->
                <CheckBox Margin="50,0,0,0" VerticalContentAlignment="Center" IsChecked="{Binding Path=IsAdjustStartTimeOnPlot, Mode=TwoWay}" ToolTip="Use file/stream start time to adjust frames start time on plot">
                    <TextBlock FontSize="14">Adjust frames start time</TextBlock>
                </CheckBox>
            </StackPanel>

            <Grid Grid.Row="3" Grid.ColumnSpan="3" x:Name="Plot" Margin="0,5,0,0">
                <oxySkia:PlotView Model="{Binding Path=PlotModel}" Controller="{Binding Path=PlotModel.Controller}" Padding="0,1,0,0" Margin="0" />
            </Grid>
        </Grid>

        <StatusBar Grid.Row="2" Height="25" VerticalAlignment="Bottom" Margin="0" VerticalContentAlignment="Center" Padding="5,0" HorizontalContentAlignment="Stretch">
            <StatusBarItem DockPanel.Dock="Right" VerticalAlignment="Center" Margin="0,0,12,0">
                <Grid Width="260" Height="21" VerticalAlignment="Center">
                    <ProgressBar Height="17" Minimum="0" Maximum="{Binding Path=OverallProgress.Max, Mode=OneWay}" Value="{Binding Path=OverallProgress.Current, Mode=OneWay}" Visibility="{Binding Path=OverallProgress.IsActive, Converter={StaticResource BoolToVisibility}}" IsIndeterminate="{Binding Path=OverallProgress.IsIndeterminate}" VerticalAlignment="Center" />
                    <TextBlock FontSize="12" Margin="4,0,4,0" Text="{Binding Path=OverallProgress.Text, Mode=OneWay}" VerticalAlignment="Center" Foreground="DimGray"></TextBlock>
                </Grid>
            </StatusBarItem>
            <StatusBarItem Padding="0" Content="FFProbe:" FontSize="14" Margin="3,0,0,0"></StatusBarItem>
            <StatusBarItem Padding="0" FontSize="14"  Margin="5,0,15,0" Content="{Binding Path=VersionInfo.VerString, Mode=OneWay}" ToolTip="{Binding VersionInfo.InfoString, Mode=OneWay}" Style="{StaticResource FFProbeValidity}" />
        </StatusBar>
    </Grid>
</Window>
